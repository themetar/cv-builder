{"version":3,"sources":["components/sections/Personal.js","components/sections/Skills.js","components/CollectionButtons.js","components/sections/OtherSkills.js","components/sections/Chronicle.js","components/EditActions.js","components/Section.js","App.js","index.js"],"names":["Personal","props","typeToType","Map","handleNameChange","handleChange","bind","handleAboutChange","handleContactTypeChange","handleContactChange","handleContactValueChange","field","event","data","this","target","value","onChange","contactList","slice","index","dataset","mode","show","className","name","about","filter","c","replace","map","i","type","href","inputs","data-index","has","get","Component","Skills","split","skill","edit","join","CollectionButtons","handleAdd","handleRemove","count","onClick","title","aria-hidden","OtherSkills","inputHandlers","editMap","push","topic","details","length","pop","handleTopic","handleInput","handleDetails","splice","showMap","Chronicle","mapShow","entry","from","until","where","what","description","mapEdit","handleFrom","handleUntil","handleWhere","handleWhat","handleDescription","min","placeholder","year","Date","getFullYear","entries","mapFunc","EditActions","handleClick","onAction","currentTarget","action","data-action","Section","state","handleAction","onUpdate","id","setState","newData","App","cv","handleUpdate","handlePrintButton","sectionId","findIndex","window","print","sections","section","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9dc0ac34.chunk.js","sourcesContent":["import {Component} from \"react\";\n\n/*\n  Renders the personal info section elements.\n  On input, sends data via callback.\n*/\nclass Personal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNameChange = this.handleChange.bind(this, \"name\");\n    this.handleAboutChange = this.handleChange.bind(this, \"about\");\n\n    this.handleContactTypeChange = this.handleContactChange.bind(this, \"type\");\n    this.handleContactValueChange = this.handleContactChange.bind(this, \"value\");\n  }\n\n  handleChange(field, event) {\n    const data = {...this.props.data};\n    data[field] = event.target.value;\n    this.props.onChange(data);\n  }\n\n  handleContactChange(field, event) {\n    /* shallow copy the contact data */\n    const data = {...this.props.data};\n    data.contactList = data.contactList.slice();\n    \n    /* modify the apropriate field */\n    const index = event.target.dataset.index;\n    data.contactList[index] = {...data.contactList[index]};\n    data.contactList[index][field] = event.target.value;\n    \n    /* invoke callback */\n    this.props.onChange(data);\n  }\n\n  render() {\n    const {mode, data} = this.props;\n\n    // when displaying\n    const show = (\n      <div>\n        <h1 className=\"bio-name\">{data.name}</h1>\n        <p className=\"bio-about\">{data.about}</p>\n        <ul className=\"contact-info\">\n        {\n          data.contactList.filter(c => c.value.replace(/\\s/g, \"\") != \"\").map((c, i) => {\n            if (c.type === \"address\") return <li key={i}><span className=\"icon-map\">&nbsp;</span>{c.value}</li>;\n            if (c.type === \"tel\") return <li key={i}><span className=\"icon-phone\">&nbsp;</span><a href={`tel:${c.value}`}>{c.value}</a></li>;\n            if (c.type === \"web\") return <li key={i}><span className=\"icon-earth\">&nbsp;</span><a href={c.value}>{c.value.replace(/(http|https):\\/\\//, '')}</a></li>;\n            /* if (c.type === \"email\") */ return <li key={i}><span className=\"icon-envelope\">&nbsp;</span><a href={`mailto:${c.value}`}>{c.value}</a></li>;\n          })\n        }\n        </ul>\n      </div>\n    );\n\n    // when editing\n    const inputs = (\n      <div>\n        <input type=\"text\" value={data.name} onChange={this.handleNameChange} className=\"bio-name m-b-1\" />\n        <input type=\"text\" value={data.about} onChange={this.handleAboutChange} className=\"bio-about m-b-1\" />\n        <ul className=\"contact-info\">\n        {\n          data.contactList.map((c, i) => {\n            return (\n              <li key={i}>\n                <select value={c.type} data-index={i} onChange={this.handleContactTypeChange}>\n                  <option value=\"tel\">Telephone</option>\n                  <option value=\"web\">Web site</option>\n                  <option value=\"address\">Address</option>\n                  <option value=\"email\">e-mail</option>\n                </select>\n                <input type={this.typeToType.has(c.type) ? this.typeToType.get(c.type) : \"text\"} data-index={i} value={c.value} onChange={this.handleContactValueChange}/>\n              </li>\n            );\n          })\n        }\n        </ul>\n      </div>\n    );\n\n    return (mode === \"show\" ? show : inputs);\n  }\n\n  typeToType = new Map([[\"tel\", \"tel\"], [\"web\", \"url\"], [\"email\", \"email\"]]);\n}\n\nexport default Personal;\n","import {Component} from \"react\";\n/*\n  Render Skills section data.\n  On input, sends data via callback.\n*/\nclass Skills extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /*\n    On user input, transform to string array and send to parent via callback\n  */\n  handleChange(event) {\n    const raw = event.target.value;\n    const data = raw.split(\",\");\n    this.props.onChange(data);\n  }\n\n  render() {\n    const {mode, data} = this.props;\n\n    // when displaying\n    const show = (\n      <ul className=\"skills\">\n        {data.map(skill => {\n          return (\n            <li key={skill}>{skill}</li>\n          );\n        })}\n      </ul>\n    );\n\n    // when editing\n    const edit = (\n      <textarea value={data.join(\",\")} onChange={this.handleChange} className=\"skills-input\" />\n    ); \n\n    return (\n      mode === \"show\" ? show : edit\n    );\n  }\n}\n\nexport default Skills;\n","import \"./CollectionButtons.css\";\n\nfunction CollectionButtons(props) {\n  const {handleAdd, handleRemove, count} = props;\n\n  return (\n    <div className=\"CollectionButtons\">\n      <button onClick={handleAdd} className=\"plus-btn pop-in\"\n              title=\"Add another item\">\n        <span aria-hidden=\"true\" className=\"icon-plus\"></span>\n        <span className=\"screen-reader-text\">Add</span>\n      </button>\n      {count > 1 &&\n        <button onClick={handleRemove} className=\"cross-btn pop-in\"\n                title=\"Remove item\">\n          <span aria-hidden=\"true\" className=\"icon-cross\"></span>\n          <span className=\"screen-reader-text\">Remove</span>\n        </button>}\n    </div>\n  );\n}\n\nexport default CollectionButtons;\n","import {Component} from \"react\";\nimport AddRemoveBtns from \"../CollectionButtons\";\n\n/*\n  Displays a collection of topics and information about them\n*/\nclass OtherSkills extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n\n    this.inputHandlers = [];\n\n    this.editMap = this.editMap.bind(this);\n  }\n\n  handleAdd() {\n    const data = this.props.data.slice(); // copy array\n\n    // add new entry\n    data.push({\n      topic: \"\",\n      details: \"\",\n    });\n\n    // send data\n    this.props.onChange(data);\n  }\n\n  handleRemove() {\n    const data = this.props.data.slice(); // copy array\n    \n    if (data.length > 1) {\n      // remove last\n      data.pop();\n      // send data\n      this.props.onChange(data);\n    }\n  }\n\n  handleInput(index, field, event) {\n    const data = this.props.data.slice();\n    data[index][field] = event.target.value;\n    this.props.onChange(data);\n  }\n\n  render() {\n    const {data, mode} = this.props;\n\n    // add handlers if needed\n    for(var i = this.inputHandlers.length; i < data.length; i++) {\n      this.inputHandlers.push({\n        handleTopic:   this.handleInput.bind(this, i, \"topic\"),\n        handleDetails:  this.handleInput.bind(this, i, \"details\"),\n      });\n    }\n\n    // remove handlers if extra\n    this.inputHandlers.splice(data.length, this.inputHandlers.length - data.length);\n\n    return (\n      <div className=\"OtherSkills\">\n        <div className=\"grid m-b-2\">\n        {\n          mode === \"show\" && data.map(this.showMap)\n        }\n        {\n          mode === \"edit\" && data.map(this.editMap)\n        }\n        </div>\n        {mode === \"edit\" && (\n          <AddRemoveBtns handleAdd={this.handleAdd} handleRemove={this.handleRemove} count={data.length} />\n        )}\n      </div>\n    );\n  }\n\n  showMap(skill, index) {\n    return (\n      <div key={index}>\n        <h3>{skill.topic}</h3>\n        <p>{skill.details}</p>\n      </div>\n    );\n  }\n\n  editMap(skill, index) {\n    return (\n      <div key={index}>\n        <input type=\"text\" value={skill.topic} onChange={this.inputHandlers[index].handleTopic} className=\"m-b-1/2\" />\n        <textarea value={skill.details} onChange={this.inputHandlers[index].handleDetails}/>\n      </div>\n    );\n  }\n}\n\nexport default OtherSkills;\n","import {Component} from \"react\";\nimport AddRemoveBtns from \"../CollectionButtons\";\n\n/*\n  Renders a history of time periods.\n  Each entry has a start year, an end year, location, title, and an optional description text.\n*/\nclass Chronicle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.inputHandlers = [];\n\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n\n  handleChange(index, field, event) {\n    const data = this.props.data.slice(); // copy array\n    data[index] = {...data[index]}; // copy entry\n    data[index][field] = event.target.value; // change field\n    this.props.onChange(data);\n  }\n\n  handleAdd() {\n    const data = this.props.data.slice(); // copy array\n\n    const year = (new Date()).getFullYear();\n\n    // add new entry\n    data.push({\n      from: year,\n      until: year,\n      where: \"Enter Organization name\",\n      what: \"Enter Gained Title\",\n      description: \"\",\n    });\n\n    // send data\n    this.props.onChange(data);\n  }\n\n  handleRemove() {\n    const data = this.props.data.slice(); // copy array\n    if (data.length > 1) {\n      data.pop(); // remove last\n      // send data\n      this.props.onChange(data);\n    }\n  }\n\n  render() {\n    const {mode} = this.props;\n    const entries = this.props.data;\n\n    // add handlers if needed\n    for(var i = this.inputHandlers.length; i < entries.length; i++) {\n      this.inputHandlers.push({\n        handleFrom:   this.handleChange.bind(this, i, \"from\"),\n        handleUntil:  this.handleChange.bind(this, i, \"until\"),\n        handleWhere:  this.handleChange.bind(this, i, \"where\"),\n        handleWhat:   this.handleChange.bind(this, i, \"what\"),\n        handleDescription:   this.handleChange.bind(this, i, \"description\"),\n      });\n    }\n\n    // remove handlers if extra\n    this.inputHandlers.splice(entries.length, this.inputHandlers.length - entries.length);\n\n    const mapFunc = mode === \"show\" ? this.mapShow : this.mapEdit;\n\n    return (\n      <div>\n        {entries.map(mapFunc)}\n        {mode === \"edit\" && (\n          <AddRemoveBtns handleAdd={this.handleAdd} handleRemove={this.handleRemove} count={entries.length} />\n        )}\n      </div>\n    );\n  }\n\n  /*\n    Render show elements\n  */\n  mapShow = (entry, index) => {\n    const {from, until, where, what, description} = entry;\n\n    return (\n      <div key={index} className=\"chrono-entry\">\n        <p>\n          <span className=\"year-from\">{from}</span>\n          <span className=\"year-until\">{until}</span>  \n          <span className=\"organization\">{where}</span>\n        </p>\n        <p className=\"gained-title\">\n          {what}\n        </p>\n        {description && <p>{description}</p>}\n      </div>  \n    );\n  }\n\n  /*\n    Render edit elements\n  */\n  mapEdit = (entry, index) => {\n    const {from, until, where, what, description} = entry;\n\n    const {handleFrom, handleUntil, handleWhere, handleWhat, handleDescription} = this.inputHandlers[index];\n\n    return (\n      <div key={index} className=\"chrono-entry\">\n        <div className=\"edit-when-where m-b-1\">\n          <input type=\"number\" min=\"1900\" value={from} onChange={handleFrom}/>\n          <input type=\"number\" min=\"1900\" value={until} onChange={handleUntil}/>\n          <input type=\"text\" value={where} onChange={handleWhere}/>\n        </div>\n        <input type=\"text\" value={what} onChange={handleWhat} className=\"m-b-1\"/>\n        <input type=\"text\" value={description} placeholder=\"Optional details\" onChange={handleDescription}/>\n      </div>\n    );\n  }\n}\n\nexport default Chronicle;\n","import {Component} from \"react\";\nimport './EditActions.css';\n\nclass EditActions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    this.props.onAction(event.currentTarget.dataset.action);\n  }\n\n  render() {\n    const {mode} = this.props;\n\n    return (\n      <div className=\"EditActions\">\n        {mode === \"show\" &&\n            <button data-action=\"edit\" onClick={this.handleClick} className=\"edit-button\"\n                    title=\"Edit\">\n              <span aria-hidden=\"true\" className=\"icon-pencil\"></span>\n              <span className=\"screen-reader-text\">Edit</span>\n            </button>\n        }\n        {mode !== \"show\" &&\n            <button data-action=\"save\" onClick={this.handleClick} className=\"edit-button m-b-1/2 pop-in\"\n                    title=\"Save\">\n              <span aria-hidden=\"true\" className=\"icon-checkmark\"></span>\n              <span className=\"screen-reader-text\">Save</span>\n            </button>\n        }\n        {mode !== \"show\" &&\n            <button data-action=\"cancel\" onClick={this.handleClick} className=\"edit-button pop-in\"\n                    title=\"Cancel\">\n              <span aria-hidden=\"true\" className=\"icon-undo\"></span>\n              <span className=\"screen-reader-text\">Cancel</span>\n            </button>\n        }\n      </div>\n    )\n  }\n}\n\nexport default EditActions;\n","import {Component} from \"react\";\nimport Personal from \"./sections/Personal\";\nimport Skills from \"./sections/Skills\";\nimport OtherSkills from \"./sections/OtherSkills\";\nimport Chronicle from \"./sections/Chronicle\";\nimport EditActions from \"./EditActions\";\n\n/*\n  Renders a CV section, depending on section type. Manages the edit actions (edit, save, delete..) input.\n*/\nclass Section extends Component {\n  constructor(props) {\n    super(props);\n    \n    /*\n      State holds a copy of it's section data. This is the working copy that gets modified in edit mode.\n      The local state data gets sent upwards on save, and discarded on cancel.\n    */\n    this.state = {\n      mode: \"show\",\n      data: props.data,\n    };\n\n    this.handleAction = this.handleAction.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /*\n    Callback for the EditActions component\n\n    action - \"edit\" | \"cancel\" | \"save\" | \"delete\"\n  */\n  handleAction(action) {\n    const {onUpdate} = this.props;\n    const {id} = this.props;\n\n    if (action === \"edit\") {\n      // change the display mode to editing\n      this.setState({mode: \"edit\"});\n    }\n    if (action === \"cancel\") {\n      // change the display mode to showing, and\n      // reset state data\n      this.setState({mode: \"show\", data: this.props.data});\n    }\n    if (action === \"save\") {\n      // change the display mode to showing\n      this.setState({mode: \"show\"});\n      /* send state data to parent component,\n         where it will be merged with rest of the CV,\n         and passed back down as prop */\n      onUpdate(id, this.state.data);\n    }\n  }\n\n  /*\n    User input callback. Updates local state with user's input.\n  */\n  handleChange(newData) {\n    this.setState({data: newData});\n  }\n\n  render() {\n    const {mode} = this.state\n    const {type, title} = this.props;\n    const {data} = mode === \"show\" ? this.props : this.state;\n\n    return (\n      <section>\n        {title && <h2>{title}</h2>}\n        {type === \"personal\" && <Personal data={data} mode={mode} onChange={this.handleChange} />}\n        {type === \"skills\" && <Skills data={data} mode={mode} onChange={this.handleChange} />}\n        {type === \"chronicle\" && <Chronicle data={data} mode={mode} onChange={this.handleChange} />}\n        {type === \"otherSkills\" && <OtherSkills data={data} mode={mode} onChange={this.handleChange} />}\n        <EditActions mode={mode} onAction={this.handleAction}/>\n      </section>\n    );\n  }\n}\n\nexport default Section;\n","import './App.css';\nimport {Component} from \"react\";\nimport Section from \"./components/Section\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    // All of the CV data is held in root state, and propagated to components\n    this.state = {\n      cv: [\n        {\n          type: \"personal\",\n          id: \"personal\",\n          data: {\n            name: \"Harry James Potter\",\n            about: \"Wizard. Head of the Department of Magical Law Enforcement. The boy who lived.\",\n            contactList: [\n              {\n                type: \"email\", value: \"hpotter@mom.gov.mag\",\n              },\n              {\n                type: \"address\", value: \"Some Street 100, London, England, Great Britain\",\n              },\n              {\n                type: \"tel\", value: \"555-666-444\",\n              },\n              {\n                type: \"web\", value: \"https://harrypotter.fandom.com/wiki/Harry_Potter\",\n              },\n            ],\n          },\n        },\n        {\n          type: \"skills\",\n          id: \"skills\",\n          title: \"Skills\",\n          data: [\n            \"Defence against Dark Arts\",\n            \"Advanced broomstick piloting\",\n            \"Care of Magical Animals\",\n            \"Parseltongue\",\n            \"MS Office\",\n          ],\n        },\n        {\n          type: \"chronicle\",\n          id: \"education\",\n          title: \"Education\",\n          data: [\n            {\n              from: \"1991\",\n              until: \"1997\",\n              where: \"Hogwarts School of Witchcraft and Wizardry\",\n              what: \"Graduate\",\n            },\n          ]\n        },\n        {\n          type: \"chronicle\",\n          id: \"work\",\n          title: \"Work\",\n          data: [\n            {\n              from: \"2017\",\n              until: \"\",\n              where: \"British Ministry of Magic\",\n              what: \"Head of the Department of Magical Law Enforcement\",\n              description: \"Oversees all operations of all subsections of the Department\",\n            },\n            {\n              from: \"2007\",\n              until: \"2016\",\n              where: \"British Ministry of Magic\",\n              what: \"Auror\",\n              description: \"Revolutionised the Auror Department at the Ministry of Magic\",\n            },\n          ]\n        },\n        {\n          type: \"otherSkills\",\n          id: \"other\",\n          title: \"Other Skills\",\n          data: [\n            {\n              topic: \"Quidditch\",\n              details: \"Won two Quidditch cups.\"\n            },\n          ]\n        },\n      ],\n    };\n\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handlePrintButton = this.handlePrintButton.bind(this);\n  }\n\n  /*\n    Update callback. Icorporates updates from edited sections into state.cv\n\n    section - Which section the data is for\n    data - New data\n  */\n  handleUpdate(sectionId, data) {\n    const cv = this.state.cv.slice();\n    cv[cv.findIndex(entry => entry.id === sectionId)].data = data;\n    this.setState({cv: cv});\n  }\n\n  /*\n    Click handler for the print button.\n  */\n  handlePrintButton(event) {\n    window.print();\n  }\n\n  render() {\n    const sections = this.state.cv;\n\n    return (\n      <div className=\"App\">\n        {sections.map(section => (\n          <Section key={section.id} id={section.id} type={section.type} title={section.title} data={section.data} onUpdate={this.handleUpdate} />\n        ))}\n        <button onClick={this.handlePrintButton} className=\"print-btn\"\n                title=\"Print your CV\">Print</button>\n        <footer>\n          Made by <a href=\"https://github.com/themetar\" target=\"_blank\">@themetar</a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './fonts/icons.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}